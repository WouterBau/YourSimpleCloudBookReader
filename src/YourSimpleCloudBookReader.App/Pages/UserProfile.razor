@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Graph
@using Microsoft.Graph.Models
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@attribute [Authorize]

<h3>User Profile</h3>
@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Property</th>
                <th>Value</th>
            </tr>
        </thead>
        <tr>
            <td> DisplayName </td>
            <td> @user.DisplayName </td>
        </tr>
        <tr>
            <td> UserPrincipalName </td>
            <td> @user.UserPrincipalName </td>
        </tr>
        @if(drive != null){
            <tr>
                <td> Drive Name </td>
                <td> @drive.Name </td>
            </tr>
        }
        @if (item != null)
        {
            <tr>
                <td> Item Name </td>
                <td> @item.Name </td>
            </tr>
        }
        @if (subItem != null)
        {
            <tr>
                <td> Item Name </td>
                <td> @subItem.Name </td>
            </tr>
        }

    </table>
}

@code {
    User? user;
    Drive? drive;
    DriveItem? item;
    DriveItem? subItem;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await GraphServiceClient.Me.GetAsync();
            if (user == null)
            {
                return;
            }

            drive = await GraphServiceClient.Me.Drive.GetAsync();
            var root = await GraphServiceClient.Drives[drive.Id].Root.GetAsync();
            var rootChildren = await GraphServiceClient.Drives[drive.Id].Items[root.Id].Children.GetAsync();
            item = rootChildren.Value.Where(x => x.Folder != null).FirstOrDefault();
            var subChildren = await GraphServiceClient.Drives[drive.Id].Items[item.Id].Children.GetAsync();
            subItem = subChildren.Value.FirstOrDefault();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
